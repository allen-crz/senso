-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.anomaly_detections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  reading_id uuid NOT NULL,
  utility_type USER-DEFINED NOT NULL,
  anomaly_score numeric NOT NULL,
  is_anomaly boolean NOT NULL,
  severity USER-DEFINED NOT NULL,
  threshold_used numeric NOT NULL,
  contributing_factors jsonb,
  model_version character varying NOT NULL,
  training_window_days integer NOT NULL,
  detected_at timestamp with time zone DEFAULT now(),
  notification_sent boolean DEFAULT false,
  notification_sent_at timestamp with time zone,
  user_feedback character varying,
  user_feedback_at timestamp with time zone,
  CONSTRAINT anomaly_detections_pkey PRIMARY KEY (id),
  CONSTRAINT anomaly_detections_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT anomaly_detections_reading_id_fkey FOREIGN KEY (reading_id) REFERENCES public.meter_readings(id)
);
CREATE TABLE public.cost_forecasts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  utility_type USER-DEFINED NOT NULL,
  forecast_month date NOT NULL,
  predicted_usage numeric NOT NULL,
  predicted_cost numeric NOT NULL,
  confidence_interval_lower numeric,
  confidence_interval_upper numeric,
  model_accuracy numeric,
  features_used jsonb,
  model_version character varying NOT NULL,
  training_data_points integer NOT NULL,
  forecast_created_at timestamp with time zone DEFAULT now(),
  actual_usage numeric,
  actual_cost numeric,
  accuracy_error numeric,
  CONSTRAINT cost_forecasts_pkey PRIMARY KEY (id),
  CONSTRAINT cost_forecasts_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.daily_forecasts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  utility_type USER-DEFINED NOT NULL,
  forecast_start_date date NOT NULL,
  forecast_days integer NOT NULL CHECK (forecast_days > 0 AND forecast_days <= 365),
  total_predicted_consumption numeric NOT NULL,
  total_predicted_cost numeric NOT NULL,
  average_daily_consumption numeric NOT NULL,
  average_daily_cost numeric NOT NULL,
  daily_forecasts jsonb NOT NULL,
  accuracy jsonb NOT NULL,
  model_version character varying NOT NULL DEFAULT '1.0'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT daily_forecasts_pkey PRIMARY KEY (id),
  CONSTRAINT daily_forecasts_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.meter_readings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  utility_type USER-DEFINED NOT NULL,
  reading_value numeric NOT NULL,
  image_url text,
  capture_timestamp timestamp with time zone DEFAULT now(),
  processing_status USER-DEFINED DEFAULT 'pending'::reading_status,
  confidence_score numeric,
  is_manual boolean DEFAULT false,
  raw_ocr_data jsonb,
  location_data jsonb,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT meter_readings_pkey PRIMARY KEY (id),
  CONSTRAINT meter_readings_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.model_training_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  model_type character varying NOT NULL,
  utility_type USER-DEFINED,
  version character varying NOT NULL,
  training_started_at timestamp with time zone NOT NULL,
  training_completed_at timestamp with time zone,
  training_status character varying DEFAULT 'running'::character varying,
  training_data_size integer,
  hyperparameters jsonb,
  performance_metrics jsonb,
  validation_score numeric,
  error_message text,
  is_deployed boolean DEFAULT false,
  deployed_at timestamp with time zone,
  CONSTRAINT model_training_logs_pkey PRIMARY KEY (id),
  CONSTRAINT model_training_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  type character varying NOT NULL,
  title character varying NOT NULL,
  message text NOT NULL,
  data jsonb,
  delivery_method character varying NOT NULL,
  sent_at timestamp with time zone,
  delivered_at timestamp with time zone,
  read_at timestamp with time zone,
  clicked_at timestamp with time zone,
  status character varying DEFAULT 'pending'::character varying,
  error_message text,
  retry_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_forecasting_models (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  utility_type USER-DEFINED NOT NULL,
  model_type character varying NOT NULL DEFAULT 'linear_regression'::character varying,
  model_data text NOT NULL,
  feature_names jsonb NOT NULL,
  performance_metrics jsonb,
  training_data_size integer NOT NULL,
  model_version character varying NOT NULL DEFAULT '1.0'::character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  scaler_data text,
  user_daily_avg numeric,
  predictor_strength jsonb,
  CONSTRAINT user_forecasting_models_pkey PRIMARY KEY (id),
  CONSTRAINT user_forecasting_models_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_historical_data (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  utility_type USER-DEFINED NOT NULL,
  month_date date NOT NULL,
  month_name character varying NOT NULL,
  year integer NOT NULL CHECK (year >= 2020 AND year <= 2030),
  consumption numeric NOT NULL CHECK (consumption > 0::numeric),
  actual_bill numeric CHECK (actual_bill > 0::numeric),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_historical_data_pkey PRIMARY KEY (id),
  CONSTRAINT user_historical_data_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_isolation_models (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  utility_type USER-DEFINED NOT NULL,
  model_data text NOT NULL,
  scaler_data text NOT NULL,
  feature_columns jsonb NOT NULL,
  contamination_rate double precision NOT NULL DEFAULT 0.1,
  performance_metrics jsonb NOT NULL DEFAULT '{}'::jsonb,
  readings_count integer NOT NULL DEFAULT 0,
  last_trained_at timestamp with time zone DEFAULT now(),
  model_version character varying NOT NULL DEFAULT '1.0.0'::character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_isolation_models_pkey PRIMARY KEY (id),
  CONSTRAINT user_isolation_models_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_preferences (
  user_id uuid NOT NULL,
  anomaly_notifications_enabled boolean DEFAULT true,
  anomaly_notification_methods jsonb DEFAULT '["push", "email"]'::jsonb,
  forecast_notifications_enabled boolean DEFAULT true,
  reading_reminder_enabled boolean DEFAULT true,
  reading_reminder_time time without time zone DEFAULT '08:00:00'::time without time zone,
  reading_reminder_frequency character varying DEFAULT 'daily'::character varying,
  timezone character varying DEFAULT 'UTC'::character varying,
  currency character varying DEFAULT 'USD'::character varying,
  units_preference jsonb DEFAULT '{"water": "cubic_meters", "electricity": "kwh"}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  water_billing_date integer CHECK (water_billing_date >= 1 AND water_billing_date <= 31),
  electricity_billing_date integer CHECK (electricity_billing_date >= 1 AND electricity_billing_date <= 31),
  water_last_bill_reading numeric,
  electricity_last_bill_reading numeric,
  water_last_bill_date date,
  electricity_last_bill_date date,
  CONSTRAINT user_preferences_pkey PRIMARY KEY (user_id),
  CONSTRAINT user_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  full_name text,
  phone text,
  address text,
  avatar_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT user_profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_utility_providers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  provider_id uuid NOT NULL,
  utility_type USER-DEFINED NOT NULL,
  account_number character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_utility_providers_pkey PRIMARY KEY (id),
  CONSTRAINT user_utility_providers_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_utility_providers_provider_id_fkey FOREIGN KEY (provider_id) REFERENCES public.utility_providers(id)
);
CREATE TABLE public.utility_providers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  utility_type USER-DEFINED NOT NULL,
  region character varying NOT NULL,
  service_area text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT utility_providers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.utility_rate_structures (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  provider_id uuid NOT NULL,
  rate_type character varying NOT NULL,
  effective_date date NOT NULL,
  end_date date,
  rate_value numeric NOT NULL,
  rate_unit character varying NOT NULL,
  tier_min numeric,
  tier_max numeric,
  month_applicable character varying DEFAULT 'all'::character varying,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT utility_rate_structures_pkey PRIMARY KEY (id),
  CONSTRAINT utility_rate_structures_provider_id_fkey FOREIGN KEY (provider_id) REFERENCES public.utility_providers(id)
);